import Foundation

let attachUploadUpdateNotificationID = "attachUploadUpdateNotificationIdentifier"
let firstCharsForHeader = 50
let firstCharsForEncryptdHeader  = 5

public enum MessagesFoldersName: String, CaseIterable {
    case inbox = "inbox"
    case draft = "draft"
    case sent = "sent"
    case outbox = "outbox"
    case starred = "starred"
    case archive = "archive"
    case spam = "spam"
    case trash = "trash"
    case outboxSD = "outbox_self_destruct_counter"
    case outboxDD = "outbox_delayed_delivery_counter"
    case outboxDM = "outbox_dead_man_counter"
}

public enum EndPoint: String {
    #if DEBUG
   // case baseUrl = "https://devapi.ctemplar.net/" // "https://devapi.ctemplar.net/" // "https://devapi.ctemplar.net/"
    case baseUrl = "https://api.ctemplar.com/"
    #else
    case baseUrl = "https://api.ctemplar.com/"
    #endif
    case signIn = "auth/sign-in/"
    case signUp = "auth/sign-up/"
    case checkUsername = "auth/check-username/"
    case recoveryCode = "auth/recover/"
    case resetPassword = "auth/reset/"
    case changePassword = "auth/change-password/"
    case verifyToken = "auth/verify/"
    case refreshToken = "auth/refresh/"
    case signOut = "auth/sign-out/"
    case messages = "emails/messages/"
    case searchMessages = "/search/messages/"
    case mailboxes = "emails/mailboxes/"
    case publicKeys = "emails/keys/"
    case unreadCounter = "emails/unread/"
    case customFolders = "emails/custom-folder/"
    case userMyself = "users/myself/"
    case contact = "users/contacts/"
    case createAttachment = "emails/attachments/create/"
    case deleteAttachment = "emails/attachments/"
    case updateAttachment = "emails/attachments/update/"
    case settings = "users/settings/"
    case blackList = "users/blacklist/"
    case whiteList = "users/whitelist/"
    case captcha = "auth/captcha"
    case verifyCaptcha = "auth/captcha-verify/"
    case appToken = "users/app-token/"
    case appVersion = "/version-info/?platform=ios"
    case mailboxKeys = "emails/mailbox-keys/"
    case setPrimaryKey = "emails/mailboxes-change-primary/"
    case filterList = "users/filters/"
}

public enum JSONKey: String {
    case userName = "username"
    case password = "password"
    case oldPassword = "old_password"
    case confirmPassword = "confirm_password"
    case deleteData = "delete_data"
    case newKeys = "new_keys"
    case privateKey = "private_key"
    case publicKey = "public_key"
    case fingerprint = "fingerprint"
    case recaptcha = "recaptcha"
    case recoveryEmail = "recovery_email"
    case inviteCode = "invite_code"
    case language = "language"
    case apnsToken = "device_token"
    case fromAddress = "from_address"
    case redeemCode = "redeem_code"
    case stripeToken = "stripe_token"
    case memory = "memory"
    case emailCount = "email_count"
    case paymentType = "payment_type"
    case resetPasswordCode = "code"
    case token = "token"
    case idIn = "id__in"
    case folder = "folder"
    case content = "content"
    case starred = "starred"
    case read = "read"
    case limit = "limit"
    case offset = "offset"
    case folderName = "name"
    case folderColor = "color"
    case receiver = "receiver"
    case carbonCopy = "cc"
    case blindCarbonCopy = "bcc"
    case sender = "sender"
    case mailbox = "mailbox"
    case send = "send"
    case subject = "subject"
    case email = "email"
    case emails = "emails"
    case address = "address"
    case note = "note"
    case phone = "phone"
    case encrypted = "is_encrypted"
    case encryption = "encryption"
    case messageID = "message"
    case fileData = "document"
    case inline = "is_inline"
    case fileType = "file_type"
    case attachments = "attachments"
    case parent = "parent"
    case isHTML = "is_html"
    case selfDestructionDate = "destruct_date"
    case delayedDeliveryDate = "delayed_delivery"
    case deadManDate = "dead_man_duration"
    case displayName = "display_name"
    case savingContacts = "save_contacts"
    case isDefault = "is_default"
    case isEnable = "is_enabled"
    case userSignature = "signature"
    case signUpCaptchaKey = "captcha_key"
    case signUpCaptchaValue = "captcha_value"
    case captchaKey = "key"
    case captchaValue = "value"
    case otp = "otp"
    case emailHash = "email_hash"
    case encryptedData = "encrypted_data"
    case subjectEncrypted = "is_subject_encrypted"
    case lastActionParentId = "last_action_parent_id"
    case lastAction = "last_action"
    case contactsEncrypted = "is_contacts_encrypted"
    case attachmentEncrypted = "is_attachments_encrypted"
    case platform = "platform"
    case forwardAttachmentsMessage = "forward_attachments_of_message"
    case blockExternalImages = "is_disable_loading_images"
    case htmlEditor = "is_html_disabled"
    case keyType = "key_type"
    case idKey = "mailboxkey_id"
    case mailBox_Id = "mailbox_id"
}

public enum JSONKeysForFilter: String {
    case id = "id"
    case name = "name"
    case parameter = "parameter"
    case conditions = "conditions"
    case condition = "condition"
    case folder = "folder"
    case filterText = "filter_text"
    case moveTo = "move_to"
    case read = "mark_as_read"
    case starred = "mark_as_starred"
}



public enum TokenConstant: Int {
    case tokenHoursExpiration = 120
    case tokenMinutesExpiration = 7200
    case tokenHoursRefresh = 1920
}
